name: 'Pkl Upload Package'
author: 'Emily McLean'
description: 'Automatically uploads your pkl package to to Github Pages'
inputs:
  input-branch:
    description: 'The branch containing the source files'
    required: false
  input-directory:
    description: 'The input directory'
    required: false
    default: "."
  output-branch:
    description: 'Which branch hosts Github Pages.'
    required: false
    default: "gh-pages"
  output-directory:
    description: 'The output directory'
    required: false
    default: "."
  pkl-version:
    description: 'The version of pkl to use'
    required: false
    default: "0.26.3"
  commit-message:
    description: "The commit message of the push to github pages"
    required: false
    default: "Upload updated version of pkl project"
  duplicate-version-directory:
    description: "Setting to true will duplicate the version directory, aka package@version/package@version.zip vs /package@version.zip"
    required: false
    default: "false"
runs:
  using: 'composite'
  steps:
    - name: Checkout source branch
      uses: actions/checkout@v2
      with:
        path: 'source'
        ref: ${{ inputs.input-branch != null && inputs.input-branch || github.ref }}
    - name: Checkout pages branch
      uses: actions/checkout@v2
      with:
        path: 'pages'
        ref: ${{ inputs.output-branch }}
    - name: Install pkl
      uses: pkl-community/setup-pkl@v0
      with:
        pkl-version: ${{ inputs.pkl-version }}
    - name: Package Pkl
      shell: bash
      run: pkl project package ./source/${{ inputs.input-directory }}
    - name: Move project files to pages
      shell: bash
      run: |
        mkdir -p ./pages/${{ inputs.output-directory }}

        if [[ "${{ inputs.duplicate-version-directory }}" == "false" ]]
        then
          mv .out/*/* ./pages/${{ inputs.output-directory }}/
        else
          mv .out/* ./pages/${{ inputs.output-directory }}/
        fi
    - uses: stefanzweifel/git-auto-commit-action@v5
      with:
        repository: ./pages
        commit-message: ${{ inputs.commit-message }}
branding:
  icon: 'cpu'
  color: 'green'